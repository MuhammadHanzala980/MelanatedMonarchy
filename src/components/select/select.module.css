.list {
  background: "linear-gradient(60deg,#E7C68E 0%, #9D7A54 100%)";
  font-weight: 700;
}
.list:hover {
  border-left: "1px solid black";
}

.link {
  color: black;
  text-decoration: none;
}

/* import React,{useState} from 'react';
import { makeStyles } from '@material-ui/core/styles';
import FormControl from '@material-ui/core/FormControl';
import NativeSelect from '@material-ui/core/NativeSelect';
import select from './select.module.css';
import {ReactComponent as DownArrow} from '../../assets/images/select/Arrow.svg';
import Backdrop from '@material-ui/core/Backdrop';
import styled from "styled-components";
import Select, { Option } from 'rc-select';
import { Button, Menu, MenuItem } from '@material-ui/core';

const Main = styled("div")`
`;

const DropDownContainer = styled("div")`
  width: 10.5em;
  margin: 0 auto;
`;

const DropDownHeader = styled("div")`
  margin-bottom: 0.8em;
  padding: 0.4em 2em 0.4em 1em;
  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);
  font-weight: 500;
  font-size: 1.3rem;
  color: #3faffa;
  background: #ffffff;
  postion:relative;
`;

const DropDownListContainer = styled("div")`
 postion: absolute;
`;

const DropDownList = styled("ul")`
  padding: 0;
  margin: 0;
  padding-left: 1em;
  background: #E7C68E;
  border: 2px solid #E7C68E;
  box-sizing: border-box;
  color: #3faffa;
  font-size: 1.3rem;
  font-weight: 500;
  &:first-child {
    padding-top: 0.8em;
  }
`;

const ListItem = styled("li")`
  list-style: none;
  margin-bottom: 0.8em;
`;

const options = ["Mangoes", "Apples", "Oranges"];


const Title = styled.option`
  padding:3rem;
  background: "#E7C68E";
`;

const useStyles = makeStyles((theme) => ({
  formControl: {
    width:'100%',
  
  }
  ,
  selectEmpty: {
    color: '#E7C68E',
    margin:'0 1rem',
  },
  
  opt:{
   
    width:'100%',
    color: 'black',
  },
  backdrop: {
    zIndex: theme.zIndex.drawer + 1,
    color: '#fff',
  },
}));

const Selectbar = () => {
  const classes = useStyles();
  const [state, setState] = React.useState({
    name: '',
  });

  const handleChange = (event) => {
    const name = event.target.name;
    setState({
      ...state,
      [name]: event.target.value,
    });
  };
  const [open, setOpen] = React.useState(false);
  const handleClose = () => {
    setOpen(false);
  };
  const [isOpen, setIsOpen] = useState(false);
  const [selectedOption, setSelectedOption] = useState(null);

  const toggling = () => setIsOpen(!isOpen);

  const onOptionClicked = value => () => {
    setSelectedOption(value);
    setIsOpen(false);
    console.log(selectedOption);
  };

  return (
    <div>
   
    
      <FormControl className={classes.formControl}>
     
        <Button
          className={classes.selectEmpty}
          value={state.Category}
          IconComponent={()=><DownArrow/>}
          onChange={handleChange}
        > 
            <Menu>
              <MenuItem value=""  className={classes.selectMenu} >
            All Category
          </MenuItem>
          <MenuItem value={10}  className={classes.selectMenu}>Free Shipping</MenuItem>
          <MenuItem value={20} className={classes.selectMenu}>Twenty</MenuItem>
          <MenuItem value={30} className={classes.selectMenu}>Thirty</MenuItem>
          </Menu>
        
      
      </FormControl>

    {/* <Main>
      <DropDownContainer>
        <DropDownHeader onClick={toggling}>
          {selectedOption || "Mangoes"}
        </DropDownHeader>
        {isOpen && (
          <DropDownListContainer>
            <DropDownList>
              {options.map(option => (
                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>
                  {option}
                </ListItem>
              ))}
            </DropDownList>
          </DropDownListContainer>
        )}
      </DropDownContainer>
    </Main> */
/* {isOpen && ( <Select onClick={toggling}>
    <Option value="jack">jack</Option>
    <Option value="lucy">lucy</Option>
    <Option value="yiminghe">yiminghe</Option>
   
  </Select>
  )} 

    </div>
  );
};

export {Selectbar}; */
